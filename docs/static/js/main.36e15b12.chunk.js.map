{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","addCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","setCategories","ReactDOM","render","document","getElementById"],"mappings":"yMAqCeA,EAlCK,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,YAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAmBvC,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC1CN,EAAc,KAGlBO,QAAQC,IAAI,iBAIZ,SACI,uBACIC,KAAK,OACLC,MAAQX,EACRY,SApBc,SAAET,GACxBF,EAAeE,EAAEU,OAAOF,a,+BCkBjBG,EAlBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAC2CC,UAAWH,GADtD,+DAEOI,MAAOF,GAFd,cAENG,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAT7B,kBAcLM,GAdK,4CAAH,sDCIEO,EAVK,SAAC,GAAuB,IAApBH,EAAmB,EAAnBA,MAAQV,EAAW,EAAXA,IAE5B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCyBFO,EA3BC,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECFR,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDb2BK,CAAc1B,GAAnCa,EAFmB,EAExBN,KAAca,EAFU,EAEVA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,yCAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEevBgB,EA/BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,aAFvB,mBAEhBQ,EAFgB,KAEJoC,EAFI,KAUvB,OACI,qCAEI,8CACA,cAAC,EAAD,CAAa7C,YAAc6C,IAC3B,uBAEA,kCAEQpC,EAAWiB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCpBlC6B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.36e15b12.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( { addCategory } ) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleImputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n    \n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2){\n            addCategory( categories => [inputValue,...categories]);\n            setInputValue('');\n        }\n\n        console.log('Submit hecho');\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\" \n                value={ inputValue }\n                onChange={ handleImputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    addCategory: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","/**\n * \n * Funcion que retorna una promesa con la coleccion de gifs\n * \n * @returns Promise(gifs)\n * \n */\n\nconst getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=iFnIqFtrBD55ZipB9OwRm4Orv1dOdXvJ`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return { \n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url,\n        }\n\n    });\n    \n    return gifs;\n\n}\n\nexport default getGifs;","import React from 'react';\n\nconst GifGridItem = ( { title , url } ) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn' >\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;","//import React, { useEffect, useState } from 'react'\nimport React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ( { category } ) => {\n    \n    const { data:images , loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\n\n            { loading && <p>Cargando</p> }\n\n            <div className=\"card-grid\">\n                {                    \n                    images.map( img => (\n                       \n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                        \n                    ))\n                    \n                }            \n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\";\nimport getGifs from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                }) \n            });\n    }, [ category ]); \n\n    return state;\n\n}","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['Football']);\n    \n    /*\n    const handleAdd = () => {\n        setCategories( ['Prueba',...categories] );\n    }\n    */\n\n    return (\n        <>\n\n            <h1>GifExpertApp</h1>\n            <AddCategory addCategory={ setCategories } />\n            <hr />\n            \n            <section>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={ category }\n                            category={ category } />\n                    ))\n                }\n            </section>\n            \n        </>\n    );\n};\n\nexport default GifExpertApp;\n\n\n/**\n * Componente - GifExpertApp\n *  <h2>GifExpertApp</h2>\n *  <hr />\n */\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  // <App />\n  <GifExpertApp />,\n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}